# General training settings
use_default_config: true  # Set to false to override defaults below (CNN/Transfer Learning Params)

# Data
use_dummy_data: false
dummy_data:
  train_dir: task2_ner_image_classification/data/dummy_animals10/train
  val_dir: task2_ner_image_classification/data/dummy_animals10/val
  test_dir: task2_ner_image_classification/data/dummy_animals10/test
  full_dataset_dir: task2_ner_image_classification/data/dummy_animals10
data:
  train_dir: task2_ner_image_classification/data/animals10/processed/train
  val_dir: task2_ner_image_classification/data/animals10/processed/val
  test_dir: task2_ner_image_classification/data/animals10/processed/test
  full_dataset_dir: task2_ner_image_classification/data/animals10/processed
  full_dataset_raw: task2_ner_image_classification/data/animals10/raw-img

# ----------------------------
# CNN Params
# ----------------------------
# model_type: basecnn
# cnn_params:
  # num_classes: 10
  # input_shape: [224, 224, 3]
  # conv_layers:
  #   - filters: 32
  #     kernel_size: [3, 3]
  #     dropout: 0.25
  #     pool_size: [2, 2]
  #   - filters: 64
  #     kernel_size: [3, 3]
  #     dropout: 0.25
  #     pool_size: [2, 2]
  # dense_units: [[256, 0.5], [128, 0.5]]
  # learning_rate: 0.0001
  # epochs: 15
  # batch_size: 32
  # random_state: 42

# ----------------------------
# Transfer Learning Params
# ----------------------------
model_type: transfer
# transfer_params:
  # base_model: "efficientnetb0"  # resnet50, resnet101, mobilenetv2, vgg16
  # num_classes: 10
  # input_shape: [224, 224, 3]
  # dense_units: [[256, 0.5], [128, 0.25]]
  # learning_rate: 0.0001
  # epochs: 10
  # batch_size: 32
  # fine_tune_at: null
  # random_state: 42

output:
  checkpoint_dir: task2_ner_image_classification/models/cv
  run_inference_using: "efficientnetb0"

misc:
  random_state: 42